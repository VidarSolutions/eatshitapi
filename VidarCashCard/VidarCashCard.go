// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package api

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ApiMetaData contains all meta data concerning the Api contract.
var ApiMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hexHash\",\"type\":\"string\"}],\"name\":\"changeOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgMsg\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_avaxAdd\",\"type\":\"string\"}],\"name\":\"completeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"estimateGasFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHexHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerTransferStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hex_hash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hexHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_orgMsg\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_avaxAdd\",\"type\":\"string\"}],\"name\":\"modifyOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_orgMsg\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_avaxAdd\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"sendToContract\",\"type\":\"bool\"}],\"name\":\"sendCash\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "0x60806040526000600160156101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280600d81526020017f4f7269676e616c204f776e65720000000000000000000000000000000000000081525060009081620000b491906200055c565b5060018060146101000a81548160ff0219169083151502179055506040518060600160405280603d8152602001620034c3603d91396002604051620000f9906200069e565b908152602001604051809103902090816200011591906200055c565b506040518060800160405280604281526020016200342d604291396002604051620001409062000705565b908152602001604051809103902090816200015c91906200055c565b506040518060600160405280602a815260200162003499602a9139600260405162000187906200076c565b90815260200160405180910390209081620001a391906200055c565b506040518060600160405280602a81526020016200346f602a91396002604051620001ce90620007d3565b90815260200160405180910390209081620001ea91906200055c565b506040518060400160405280601f81526020017f4164647265737320676976656e20282025732029207761732028202573202900815250600260405162000231906200083a565b908152602001604051809103902090816200024d91906200055c565b50604051806060016040528060408152602001620033ed6040913960026040516200027890620008a1565b908152602001604051809103902090816200029491906200055c565b506040518060a001604052806066815260200162003500606691396002604051620002bf9062000908565b90815260200160405180910390209081620002db91906200055c565b506200091f565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200036457607f821691505b6020821081036200037a57620003796200031c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003e47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003a5565b620003f08683620003a5565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200043d62000437620004318462000408565b62000412565b62000408565b9050919050565b6000819050919050565b62000459836200041c565b62000471620004688262000444565b848454620003b2565b825550505050565b600090565b6200048862000479565b620004958184846200044e565b505050565b5b81811015620004bd57620004b16000826200047e565b6001810190506200049b565b5050565b601f8211156200050c57620004d68162000380565b620004e18462000395565b81016020851015620004f1578190505b62000509620005008562000395565b8301826200049a565b50505b505050565b600082821c905092915050565b6000620005316000198460080262000511565b1980831691505092915050565b60006200054c83836200051e565b9150826002028217905092915050565b6200056782620002e2565b67ffffffffffffffff811115620005835762000582620002ed565b5b6200058f82546200034b565b6200059c828285620004c1565b600060209050601f831160018114620005d45760008415620005bf578287015190505b620005cb85826200053e565b8655506200063b565b601f198416620005e48662000380565b60005b828110156200060e57848901518255600182019150602085019450602081019050620005e7565b868310156200062e57848901516200062a601f8916826200051e565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b7f5472616e736665724e6f74436f6d706c65746500000000000000000000000000600082015250565b60006200068660138362000643565b915062000693826200064e565b601382019050919050565b6000620006ab8262000677565b9150819050919050565b7f5472616e73666572436f6d706c65746500000000000000000000000000000000600082015250565b6000620006ed60108362000643565b9150620006fa82620006b5565b601082019050919050565b60006200071282620006de565b9150819050919050565b7f6f72674d73670000000000000000000000000000000000000000000000000000600082015250565b60006200075460068362000643565b915062000761826200071c565b600682019050919050565b6000620007798262000745565b9150819050919050565b7f6164647265737300000000000000000000000000000000000000000000000000600082015250565b6000620007bb60078362000643565b9150620007c88262000783565b600782019050919050565b6000620007e082620007ac565b9150819050919050565b7f616464546f537472696e67000000000000000000000000000000000000000000600082015250565b600062000822600b8362000643565b91506200082f82620007ea565b600b82019050919050565b6000620008478262000813565b9150819050919050565b7f6f6e6c794f776e65720000000000000000000000000000000000000000000000600082015250565b60006200088960098362000643565b9150620008968262000851565b600982019050919050565b6000620008ae826200087a565b9150819050919050565b7f4176617800000000000000000000000000000000000000000000000000000000600082015250565b6000620008f060048362000643565b9150620008fd82620008b8565b600482019050919050565b60006200091582620008e1565b9150819050919050565b612abe806200092f6000396000f3fe6080604052600436106100855760003560e01c806306e5084d1461009157806331b1638a146100ad578063861458d8146100d8578063a18a186b14610103578063b387ef921461012e578063bb6d1f1e14610159578063c944f10714610182578063e1fb7724146101ad578063e50b5280146101d6578063faec4db4146102015761008c565b3661008c57005b600080fd5b6100ab60048036038101906100a69190611e8f565b61023e565b005b3480156100b957600080fd5b506100c2610b32565b6040516100cf9190611f51565b60405180910390f35b3480156100e457600080fd5b506100ed610b49565b6040516100fa9190611f7b565b60405180910390f35b34801561010f57600080fd5b50610118610b8b565b6040516101259190611fb7565b60405180910390f35b34801561013a57600080fd5b50610143610bb5565b6040516101509190611fb7565b60405180910390f35b34801561016557600080fd5b50610180600480360381019061017b9190611fd2565b610bdb565b005b34801561018e57600080fd5b506101976110bf565b6040516101a491906120c9565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf91906120eb565b611151565b005b3480156101e257600080fd5b506101eb611606565b6040516101f891906120c9565b60405180910390f35b34801561020d57600080fd5b5061022860048036038101906102239190612192565b611694565b6040516102359190611f51565b60405180910390f35b7351644fece22a2f478d6c919c1242b6582c6cced563a3fa67ed866040518263ffffffff1660e01b8152600401610275919061223a565b602060405180830381865af4158015610292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b6919061226a565b806102be5750805b6102fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f490612309565b60405180910390fd5b6000610307610b49565b905060006064600f8361031a9190612358565b61032491906123c9565b8261032f91906123fa565b9050600081655af3107a400061034591906123fa565b9050600160149054906101000a900460ff161561054e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105076040518060400160405280600981526020017f6f6e6c794f776e657200000000000000000000000000000000000000000000008152507351644fece22a2f478d6c919c1242b6582c6cced563274695d3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161043f919061243d565b600060405180830381865af415801561045c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061048591906124c8565b7351644fece22a2f478d6c919c1242b6582c6cced563274695d3336040518263ffffffff1660e01b81526004016104bc919061243d565b600060405180830381865af41580156104d9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061050291906124c8565b611955565b90610548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053f91906120c9565b60405180910390fd5b50610943565b7351644fece22a2f478d6c919c1242b6582c6cced56357b7866d600088886040518463ffffffff1660e01b815260040161058a93929190612562565b602060405180830381865af41580156105a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb919061226a565b61060b6040518060400160405280600681526020017f6f72674d736700000000000000000000000000000000000000000000000000008152508888611955565b9061064c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064391906120c9565b60405180910390fd5b5060007351644fece22a2f478d6c919c1242b6582c6cced563274695d3336040518263ffffffff1660e01b8152600401610686919061243d565b600060405180830381865af41580156106a3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106cc91906124c8565b90507351644fece22a2f478d6c919c1242b6582c6cced5633a96fdd7826107276040518060400160405280600b81526020017f616464546f537472696e67000000000000000000000000000000000000000000815250611998565b6040518363ffffffff1660e01b81526004016107449291906125a7565b602060405180830381865af4158015610761573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610785919061226a565b156108036040518060400160405280600b81526020017f616464546f537472696e67000000000000000000000000000000000000000000815250886107fe6040518060400160405280600b81526020017f616464546f537472696e67000000000000000000000000000000000000000000815250611998565b611955565b90610844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083b91906120c9565b60405180910390fd5b507351644fece22a2f478d6c919c1242b6582c6cced5633a96fdd782886040518363ffffffff1660e01b815260040161087e9291906125a7565b602060405180830381865af415801561089b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf919061226a565b6108ff6040518060400160405280600781526020017f61646472657373000000000000000000000000000000000000000000000000008152508884611955565b90610940576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093791906120c9565b60405180910390fd5b50505b600160159054906101000a900460ff1615610993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098a9061262a565b60405180910390fd5b600081886109a191906123fa565b90506000881180156109b35750804710155b610a036040518060400160405280600481526020017f41766178000000000000000000000000000000000000000000000000000000008152506109f58b611a48565b6109fe86611a48565b611955565b90610a44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3b91906120c9565b60405180910390fd5b5060018060156101000a81548160ff02191690831515021790555060008973ffffffffffffffffffffffffffffffffffffffff1689604051610a859061267b565b60006040518083038185875af1925050503d8060008114610ac2576040519150601f19603f3d011682016040523d82523d6000602084013e610ac7565b606091505b5050905080610b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b02906126dc565b60405180910390fd5b6000600160156101000a81548160ff02191690831515021790555050505050505050505050565b6000600160149054906101000a900460ff16905090565b6000805a905060003a9050600061a4105a84610b6591906126fc565b610b6f91906123fa565b905060008282610b7f9190612358565b90508094505050505090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff1615610c2a6040518060400160405280601081526020017f5472616e73666572436f6d706c65746500000000000000000000000000000000815250611998565b90610c6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6291906120c9565b60405180910390fd5b507351644fece22a2f478d6c919c1242b6582c6cced56357b7866d600084846040518463ffffffff1660e01b8152600401610ca893929190612562565b602060405180830381865af4158015610cc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce9919061226a565b610d296040518060400160405280600681526020017f6f72674d736700000000000000000000000000000000000000000000000000008152508484611955565b90610d6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6191906120c9565b60405180910390fd5b5060007351644fece22a2f478d6c919c1242b6582c6cced563274695d3336040518263ffffffff1660e01b8152600401610da4919061243d565b600060405180830381865af4158015610dc1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610dea91906124c8565b90507351644fece22a2f478d6c919c1242b6582c6cced5633a96fdd782610e456040518060400160405280600b81526020017f616464546f537472696e67000000000000000000000000000000000000000000815250611998565b6040518363ffffffff1660e01b8152600401610e629291906125a7565b602060405180830381865af4158015610e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea3919061226a565b15610f216040518060400160405280600b81526020017f616464546f537472696e6700000000000000000000000000000000000000000081525084610f1c6040518060400160405280600b81526020017f616464546f537472696e67000000000000000000000000000000000000000000815250611998565b611955565b90610f62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5991906120c9565b60405180910390fd5b507351644fece22a2f478d6c919c1242b6582c6cced5633a96fdd782846040518363ffffffff1660e01b8152600401610f9c9291906125a7565b602060405180830381865af4158015610fb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdd919061226a565b61101d6040518060400160405280600781526020017f61646472657373000000000000000000000000000000000000000000000000008152508484611955565b9061105e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105591906120c9565b60405180910390fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060146101000a81548160ff021916908315150217905550505050565b6060600080546110ce9061275f565b80601f01602080910402602001604051908101604052809291908181526020018280546110fa9061275f565b80156111475780601f1061111c57610100808354040283529160200191611147565b820191906000526020600020905b81548152906001019060200180831161112a57829003601f168201915b5050505050905090565b600160149054906101000a900460ff16156111a06040518060400160405280601081526020017f5472616e73666572436f6d706c65746500000000000000000000000000000000815250611998565b906111e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d891906120c9565b60405180910390fd5b507351644fece22a2f478d6c919c1242b6582c6cced56357b7866d600084846040518463ffffffff1660e01b815260040161121e93929190612562565b602060405180830381865af415801561123b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125f919061226a565b61129f6040518060400160405280600681526020017f6f72674d736700000000000000000000000000000000000000000000000000008152508484611955565b906112e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d791906120c9565b60405180910390fd5b5060007351644fece22a2f478d6c919c1242b6582c6cced563274695d3336040518263ffffffff1660e01b815260040161131a919061243d565b600060405180830381865af4158015611337573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061136091906124c8565b90507351644fece22a2f478d6c919c1242b6582c6cced5633a96fdd7826113bb6040518060400160405280600b81526020017f616464546f537472696e67000000000000000000000000000000000000000000815250611998565b6040518363ffffffff1660e01b81526004016113d89291906125a7565b602060405180830381865af41580156113f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611419919061226a565b156114976040518060400160405280600b81526020017f616464546f537472696e67000000000000000000000000000000000000000000815250846114926040518060400160405280600b81526020017f616464546f537472696e67000000000000000000000000000000000000000000815250611998565b611955565b906114d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114cf91906120c9565b60405180910390fd5b507351644fece22a2f478d6c919c1242b6582c6cced5633a96fdd782846040518363ffffffff1660e01b81526004016115129291906125a7565b602060405180830381865af415801561152f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611553919061226a565b6115936040518060400160405280600781526020017f61646472657373000000000000000000000000000000000000000000000000008152508484611955565b906115d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115cb91906120c9565b60405180910390fd5b5083600090816115e49190612932565b506000600160146101000a81548160ff02191690831515021790555050505050565b600080546116139061275f565b80601f016020809104026020016040519081016040528092919081815260200182805461163f9061275f565b801561168c5780601f106116615761010080835404028352916020019161168c565b820191906000526020600020905b81548152906001019060200180831161166f57829003601f168201915b505050505081565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118416040518060400160405280600981526020017f6f6e6c794f776e657200000000000000000000000000000000000000000000008152507351644fece22a2f478d6c919c1242b6582c6cced563274695d3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401611779919061243d565b600060405180830381865af4158015611796573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906117bf91906124c8565b7351644fece22a2f478d6c919c1242b6582c6cced563274695d3336040518263ffffffff1660e01b81526004016117f6919061243d565b600060405180830381865af4158015611813573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061183c91906124c8565b611955565b90611882576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187991906120c9565b60405180910390fd5b50600160149054906101000a900460ff166118d16040518060400160405280601381526020017f5472616e736665724e6f74436f6d706c65746500000000000000000000000000815250611998565b90611912576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190991906120c9565b60405180910390fd5b5081600090816119229190612932565b506000600160146101000a81548160ff021916908315150217905550600160149054906101000a900460ff169050919050565b6060600061196285611998565b9050600081858560405160200161197b93929190612a40565b604051602081830303815290604052905080925050509392505050565b60606002826040516119aa9190612a71565b908152602001604051809103902080546119c39061275f565b80601f01602080910402602001604051908101604052809291908181526020018280546119ef9061275f565b8015611a3c5780601f10611a1157610100808354040283529160200191611a3c565b820191906000526020600020905b815481529060010190602001808311611a1f57829003601f168201915b50505050509050919050565b606060006001611a5784611b16565b01905060008167ffffffffffffffff811115611a7657611a75611d2c565b5b6040519080825280601f01601f191660200182016040528015611aa85781602001600182028036833780820191505090505b509050600082602001820190505b600115611b0b578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611aff57611afe61239a565b5b04945060008503611ab6575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611b74577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611b6a57611b6961239a565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611bb1576d04ee2d6d415b85acef81000000008381611ba757611ba661239a565b5b0492506020810190505b662386f26fc100008310611be057662386f26fc100008381611bd657611bd561239a565b5b0492506010810190505b6305f5e1008310611c09576305f5e1008381611bff57611bfe61239a565b5b0492506008810190505b6127108310611c2e576127108381611c2457611c2361239a565b5b0492506004810190505b60648310611c515760648381611c4757611c4661239a565b5b0492506002810190505b600a8310611c60576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ca882611c7d565b9050919050565b611cb881611c9d565b8114611cc357600080fd5b50565b600081359050611cd581611caf565b92915050565b6000819050919050565b611cee81611cdb565b8114611cf957600080fd5b50565b600081359050611d0b81611ce5565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d6482611d1b565b810181811067ffffffffffffffff82111715611d8357611d82611d2c565b5b80604052505050565b6000611d96611c69565b9050611da28282611d5b565b919050565b600067ffffffffffffffff821115611dc257611dc1611d2c565b5b611dcb82611d1b565b9050602081019050919050565b82818337600083830152505050565b6000611dfa611df584611da7565b611d8c565b905082815260208101848484011115611e1657611e15611d16565b5b611e21848285611dd8565b509392505050565b600082601f830112611e3e57611e3d611d11565b5b8135611e4e848260208601611de7565b91505092915050565b60008115159050919050565b611e6c81611e57565b8114611e7757600080fd5b50565b600081359050611e8981611e63565b92915050565b600080600080600060a08688031215611eab57611eaa611c73565b5b6000611eb988828901611cc6565b9550506020611eca88828901611cfc565b945050604086013567ffffffffffffffff811115611eeb57611eea611c78565b5b611ef788828901611e29565b935050606086013567ffffffffffffffff811115611f1857611f17611c78565b5b611f2488828901611e29565b9250506080611f3588828901611e7a565b9150509295509295909350565b611f4b81611e57565b82525050565b6000602082019050611f666000830184611f42565b92915050565b611f7581611cdb565b82525050565b6000602082019050611f906000830184611f6c565b92915050565b6000611fa182611c7d565b9050919050565b611fb181611f96565b82525050565b6000602082019050611fcc6000830184611fa8565b92915050565b60008060408385031215611fe957611fe8611c73565b5b600083013567ffffffffffffffff81111561200757612006611c78565b5b61201385828601611e29565b925050602083013567ffffffffffffffff81111561203457612033611c78565b5b61204085828601611e29565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612084578082015181840152602081019050612069565b60008484015250505050565b600061209b8261204a565b6120a58185612055565b93506120b5818560208601612066565b6120be81611d1b565b840191505092915050565b600060208201905081810360008301526120e38184612090565b905092915050565b60008060006060848603121561210457612103611c73565b5b600084013567ffffffffffffffff81111561212257612121611c78565b5b61212e86828701611e29565b935050602084013567ffffffffffffffff81111561214f5761214e611c78565b5b61215b86828701611e29565b925050604084013567ffffffffffffffff81111561217c5761217b611c78565b5b61218886828701611e29565b9150509250925092565b6000602082840312156121a8576121a7611c73565b5b600082013567ffffffffffffffff8111156121c6576121c5611c78565b5b6121d284828501611e29565b91505092915050565b6000819050919050565b60006122006121fb6121f684611c7d565b6121db565b611c7d565b9050919050565b6000612212826121e5565b9050919050565b600061222482612207565b9050919050565b61223481612219565b82525050565b600060208201905061224f600083018461222b565b92915050565b60008151905061226481611e63565b92915050565b6000602082840312156122805761227f611c73565b5b600061228e84828501612255565b91505092915050565b7f4e6565642076616c6964206164647265737320746f2073656e6420415641582060008201527f746f000000000000000000000000000000000000000000000000000000000000602082015250565b60006122f3602283612055565b91506122fe82612297565b604082019050919050565b60006020820190508181036000830152612322816122e6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061236382611cdb565b915061236e83611cdb565b925082820261237c81611cdb565b9150828204841483151761239357612392612329565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006123d482611cdb565b91506123df83611cdb565b9250826123ef576123ee61239a565b5b828204905092915050565b600061240582611cdb565b915061241083611cdb565b925082820190508082111561242857612427612329565b5b92915050565b61243781611f96565b82525050565b6000602082019050612452600083018461242e565b92915050565b600061246b61246684611da7565b611d8c565b90508281526020810184848401111561248757612486611d16565b5b612492848285612066565b509392505050565b600082601f8301126124af576124ae611d11565b5b81516124bf848260208601612458565b91505092915050565b6000602082840312156124de576124dd611c73565b5b600082015167ffffffffffffffff8111156124fc576124fb611c78565b5b6125088482850161249a565b91505092915050565b8082525050565b600082825260208201905092915050565b60006125348261204a565b61253e8185612518565b935061254e818560208601612066565b61255781611d1b565b840191505092915050565b60006060820190506125776000830186612511565b81810360208301526125898185612529565b9050818103604083015261259d8184612529565b9050949350505050565b600060408201905081810360008301526125c18185612529565b905081810360208301526125d58184612529565b90509392505050565b7f5265656e7472616e742063616c6c206465746563746564210000000000000000600082015250565b6000612614601883612055565b915061261f826125de565b602082019050919050565b6000602082019050818103600083015261264381612607565b9050919050565b600081905092915050565b50565b600061266560008361264a565b915061267082612655565b600082019050919050565b600061268682612658565b9150819050919050565b7f4661696c656420746f2073656e64204156415800000000000000000000000000600082015250565b60006126c6601383612055565b91506126d182612690565b602082019050919050565b600060208201905081810360008301526126f5816126b9565b9050919050565b600061270782611cdb565b915061271283611cdb565b925082820390508181111561272a57612729612329565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061277757607f821691505b60208210810361278a57612789612730565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026127f27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826127b5565b6127fc86836127b5565b95508019841693508086168417925050509392505050565b600061282f61282a61282584611cdb565b6121db565b611cdb565b9050919050565b6000819050919050565b61284983612814565b61285d61285582612836565b8484546127c2565b825550505050565b600090565b612872612865565b61287d818484612840565b505050565b5b818110156128a15761289660008261286a565b600181019050612883565b5050565b601f8211156128e6576128b781612790565b6128c0846127a5565b810160208510156128cf578190505b6128e36128db856127a5565b830182612882565b50505b505050565b600082821c905092915050565b6000612909600019846008026128eb565b1980831691505092915050565b600061292283836128f8565b9150826002028217905092915050565b61293b8261204a565b67ffffffffffffffff81111561295457612953611d2c565b5b61295e825461275f565b6129698282856128a5565b600060209050601f83116001811461299c576000841561298a578287015190505b6129948582612916565b8655506129fc565b601f1984166129aa86612790565b60005b828110156129d2578489015182556001820191506020850194506020810190506129ad565b868310156129ef57848901516129eb601f8916826128f8565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b6000612a1a8261204a565b612a248185612a04565b9350612a34818560208601612066565b80840191505092915050565b6000612a4c8286612a0f565b9150612a588285612a0f565b9150612a648284612a0f565b9150819050949350505050565b6000612a7d8284612a0f565b91508190509291505056fea26469706673582212208c1897dfb060d96cbba4f79096fb0a3cc2eb7b1bb4ec2de53bc9f33ad30d060364736f6c634300081200334f6e6c7920746865206f776e6572202820257320292063616e2063616c6c20746869732066756e6374696f6e2e2053656e646572206973203a202820257320294f776e6572207472616e7366657220636f6d706c657465206d7573742062652066616c7365206265666f72652063616c6c696e6720746869732066756e6374696f6e6f72674d73672028202573202920206f722053656e64657220496e636f72726563743a202820257320296f72674d736720282025732029206f722041646472657373206e6f742076616c69643a202820257320294f776e6572207472616e73666572206d75737420626520636f6d706c65746564206265666f72652063616c6c696e6720746869732066756e6374696f6e54686520636f6e747261637420646f6573206e6f7420686176652073756666696369656e742062616c616e6365206f66204156415820746f206d616b652061207769746864726177616c3a20257320616e6420636f7665722067617320666565733a20257320",
}

// ApiABI is the input ABI used to generate the binding from.
// Deprecated: Use ApiMetaData.ABI instead.
var ApiABI = ApiMetaData.ABI

// ApiBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ApiMetaData.Bin instead.
var ApiBin = ApiMetaData.Bin

// DeployApi deploys a new Ethereum contract, binding an instance of Api to it.
func DeployApi(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Api, error) {
	parsed, err := ApiMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ApiBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// Api is an auto generated Go binding around an Ethereum contract.
type Api struct {
	ApiCaller     // Read-only binding to the contract
	ApiTransactor // Write-only binding to the contract
	ApiFilterer   // Log filterer for contract events
}

// ApiCaller is an auto generated read-only Go binding around an Ethereum contract.
type ApiCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ApiTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ApiFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ApiSession struct {
	Contract     *Api              // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ApiCallerSession struct {
	Contract *ApiCaller    // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// ApiTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ApiTransactorSession struct {
	Contract     *ApiTransactor    // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiRaw is an auto generated low-level Go binding around an Ethereum contract.
type ApiRaw struct {
	Contract *Api // Generic contract binding to access the raw methods on
}

// ApiCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ApiCallerRaw struct {
	Contract *ApiCaller // Generic read-only contract binding to access the raw methods on
}

// ApiTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ApiTransactorRaw struct {
	Contract *ApiTransactor // Generic write-only contract binding to access the raw methods on
}

// NewApi creates a new instance of Api, bound to a specific deployed contract.
func NewApi(address common.Address, backend bind.ContractBackend) (*Api, error) {
	contract, err := bindApi(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// NewApiCaller creates a new read-only instance of Api, bound to a specific deployed contract.
func NewApiCaller(address common.Address, caller bind.ContractCaller) (*ApiCaller, error) {
	contract, err := bindApi(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ApiCaller{contract: contract}, nil
}

// NewApiTransactor creates a new write-only instance of Api, bound to a specific deployed contract.
func NewApiTransactor(address common.Address, transactor bind.ContractTransactor) (*ApiTransactor, error) {
	contract, err := bindApi(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ApiTransactor{contract: contract}, nil
}

// NewApiFilterer creates a new log filterer instance of Api, bound to a specific deployed contract.
func NewApiFilterer(address common.Address, filterer bind.ContractFilterer) (*ApiFilterer, error) {
	contract, err := bindApi(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ApiFilterer{contract: contract}, nil
}

// bindApi binds a generic wrapper to an already deployed contract.
func bindApi(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ApiMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.ApiCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.contract.Transact(opts, method, params...)
}

// CurrentOwner is a free data retrieval call binding the contract method 0xb387ef92.
//
// Solidity: function currentOwner() view returns(address)
func (_Api *ApiCaller) CurrentOwner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "currentOwner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CurrentOwner is a free data retrieval call binding the contract method 0xb387ef92.
//
// Solidity: function currentOwner() view returns(address)
func (_Api *ApiSession) CurrentOwner() (common.Address, error) {
	return _Api.Contract.CurrentOwner(&_Api.CallOpts)
}

// CurrentOwner is a free data retrieval call binding the contract method 0xb387ef92.
//
// Solidity: function currentOwner() view returns(address)
func (_Api *ApiCallerSession) CurrentOwner() (common.Address, error) {
	return _Api.Contract.CurrentOwner(&_Api.CallOpts)
}

// EstimateGasFee is a free data retrieval call binding the contract method 0x861458d8.
//
// Solidity: function estimateGasFee() view returns(uint256)
func (_Api *ApiCaller) EstimateGasFee(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "estimateGasFee")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// EstimateGasFee is a free data retrieval call binding the contract method 0x861458d8.
//
// Solidity: function estimateGasFee() view returns(uint256)
func (_Api *ApiSession) EstimateGasFee() (*big.Int, error) {
	return _Api.Contract.EstimateGasFee(&_Api.CallOpts)
}

// EstimateGasFee is a free data retrieval call binding the contract method 0x861458d8.
//
// Solidity: function estimateGasFee() view returns(uint256)
func (_Api *ApiCallerSession) EstimateGasFee() (*big.Int, error) {
	return _Api.Contract.EstimateGasFee(&_Api.CallOpts)
}

// GetCurrentOwner is a free data retrieval call binding the contract method 0xa18a186b.
//
// Solidity: function getCurrentOwner() view returns(address)
func (_Api *ApiCaller) GetCurrentOwner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getCurrentOwner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetCurrentOwner is a free data retrieval call binding the contract method 0xa18a186b.
//
// Solidity: function getCurrentOwner() view returns(address)
func (_Api *ApiSession) GetCurrentOwner() (common.Address, error) {
	return _Api.Contract.GetCurrentOwner(&_Api.CallOpts)
}

// GetCurrentOwner is a free data retrieval call binding the contract method 0xa18a186b.
//
// Solidity: function getCurrentOwner() view returns(address)
func (_Api *ApiCallerSession) GetCurrentOwner() (common.Address, error) {
	return _Api.Contract.GetCurrentOwner(&_Api.CallOpts)
}

// GetHexHash is a free data retrieval call binding the contract method 0xc944f107.
//
// Solidity: function getHexHash() view returns(string)
func (_Api *ApiCaller) GetHexHash(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getHexHash")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetHexHash is a free data retrieval call binding the contract method 0xc944f107.
//
// Solidity: function getHexHash() view returns(string)
func (_Api *ApiSession) GetHexHash() (string, error) {
	return _Api.Contract.GetHexHash(&_Api.CallOpts)
}

// GetHexHash is a free data retrieval call binding the contract method 0xc944f107.
//
// Solidity: function getHexHash() view returns(string)
func (_Api *ApiCallerSession) GetHexHash() (string, error) {
	return _Api.Contract.GetHexHash(&_Api.CallOpts)
}

// GetOwnerTransferStatus is a free data retrieval call binding the contract method 0x31b1638a.
//
// Solidity: function getOwnerTransferStatus() view returns(bool)
func (_Api *ApiCaller) GetOwnerTransferStatus(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getOwnerTransferStatus")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetOwnerTransferStatus is a free data retrieval call binding the contract method 0x31b1638a.
//
// Solidity: function getOwnerTransferStatus() view returns(bool)
func (_Api *ApiSession) GetOwnerTransferStatus() (bool, error) {
	return _Api.Contract.GetOwnerTransferStatus(&_Api.CallOpts)
}

// GetOwnerTransferStatus is a free data retrieval call binding the contract method 0x31b1638a.
//
// Solidity: function getOwnerTransferStatus() view returns(bool)
func (_Api *ApiCallerSession) GetOwnerTransferStatus() (bool, error) {
	return _Api.Contract.GetOwnerTransferStatus(&_Api.CallOpts)
}

// HexHash is a free data retrieval call binding the contract method 0xe50b5280.
//
// Solidity: function hex_hash() view returns(string)
func (_Api *ApiCaller) HexHash(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "hex_hash")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// HexHash is a free data retrieval call binding the contract method 0xe50b5280.
//
// Solidity: function hex_hash() view returns(string)
func (_Api *ApiSession) HexHash() (string, error) {
	return _Api.Contract.HexHash(&_Api.CallOpts)
}

// HexHash is a free data retrieval call binding the contract method 0xe50b5280.
//
// Solidity: function hex_hash() view returns(string)
func (_Api *ApiCallerSession) HexHash() (string, error) {
	return _Api.Contract.HexHash(&_Api.CallOpts)
}

// ChangeOwner is a paid mutator transaction binding the contract method 0xfaec4db4.
//
// Solidity: function changeOwner(string _hexHash) returns(bool)
func (_Api *ApiTransactor) ChangeOwner(opts *bind.TransactOpts, _hexHash string) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "changeOwner", _hexHash)
}

// ChangeOwner is a paid mutator transaction binding the contract method 0xfaec4db4.
//
// Solidity: function changeOwner(string _hexHash) returns(bool)
func (_Api *ApiSession) ChangeOwner(_hexHash string) (*types.Transaction, error) {
	return _Api.Contract.ChangeOwner(&_Api.TransactOpts, _hexHash)
}

// ChangeOwner is a paid mutator transaction binding the contract method 0xfaec4db4.
//
// Solidity: function changeOwner(string _hexHash) returns(bool)
func (_Api *ApiTransactorSession) ChangeOwner(_hexHash string) (*types.Transaction, error) {
	return _Api.Contract.ChangeOwner(&_Api.TransactOpts, _hexHash)
}

// CompleteTransfer is a paid mutator transaction binding the contract method 0xbb6d1f1e.
//
// Solidity: function completeTransfer(string _orgMsg, string _avaxAdd) returns()
func (_Api *ApiTransactor) CompleteTransfer(opts *bind.TransactOpts, _orgMsg string, _avaxAdd string) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "completeTransfer", _orgMsg, _avaxAdd)
}

// CompleteTransfer is a paid mutator transaction binding the contract method 0xbb6d1f1e.
//
// Solidity: function completeTransfer(string _orgMsg, string _avaxAdd) returns()
func (_Api *ApiSession) CompleteTransfer(_orgMsg string, _avaxAdd string) (*types.Transaction, error) {
	return _Api.Contract.CompleteTransfer(&_Api.TransactOpts, _orgMsg, _avaxAdd)
}

// CompleteTransfer is a paid mutator transaction binding the contract method 0xbb6d1f1e.
//
// Solidity: function completeTransfer(string _orgMsg, string _avaxAdd) returns()
func (_Api *ApiTransactorSession) CompleteTransfer(_orgMsg string, _avaxAdd string) (*types.Transaction, error) {
	return _Api.Contract.CompleteTransfer(&_Api.TransactOpts, _orgMsg, _avaxAdd)
}

// ModifyOwner is a paid mutator transaction binding the contract method 0xe1fb7724.
//
// Solidity: function modifyOwner(string _hexHash, string _orgMsg, string _avaxAdd) returns()
func (_Api *ApiTransactor) ModifyOwner(opts *bind.TransactOpts, _hexHash string, _orgMsg string, _avaxAdd string) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "modifyOwner", _hexHash, _orgMsg, _avaxAdd)
}

// ModifyOwner is a paid mutator transaction binding the contract method 0xe1fb7724.
//
// Solidity: function modifyOwner(string _hexHash, string _orgMsg, string _avaxAdd) returns()
func (_Api *ApiSession) ModifyOwner(_hexHash string, _orgMsg string, _avaxAdd string) (*types.Transaction, error) {
	return _Api.Contract.ModifyOwner(&_Api.TransactOpts, _hexHash, _orgMsg, _avaxAdd)
}

// ModifyOwner is a paid mutator transaction binding the contract method 0xe1fb7724.
//
// Solidity: function modifyOwner(string _hexHash, string _orgMsg, string _avaxAdd) returns()
func (_Api *ApiTransactorSession) ModifyOwner(_hexHash string, _orgMsg string, _avaxAdd string) (*types.Transaction, error) {
	return _Api.Contract.ModifyOwner(&_Api.TransactOpts, _hexHash, _orgMsg, _avaxAdd)
}

// SendCash is a paid mutator transaction binding the contract method 0x06e5084d.
//
// Solidity: function sendCash(address to, uint256 amount, string _orgMsg, string _avaxAdd, bool sendToContract) payable returns()
func (_Api *ApiTransactor) SendCash(opts *bind.TransactOpts, to common.Address, amount *big.Int, _orgMsg string, _avaxAdd string, sendToContract bool) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "sendCash", to, amount, _orgMsg, _avaxAdd, sendToContract)
}

// SendCash is a paid mutator transaction binding the contract method 0x06e5084d.
//
// Solidity: function sendCash(address to, uint256 amount, string _orgMsg, string _avaxAdd, bool sendToContract) payable returns()
func (_Api *ApiSession) SendCash(to common.Address, amount *big.Int, _orgMsg string, _avaxAdd string, sendToContract bool) (*types.Transaction, error) {
	return _Api.Contract.SendCash(&_Api.TransactOpts, to, amount, _orgMsg, _avaxAdd, sendToContract)
}

// SendCash is a paid mutator transaction binding the contract method 0x06e5084d.
//
// Solidity: function sendCash(address to, uint256 amount, string _orgMsg, string _avaxAdd, bool sendToContract) payable returns()
func (_Api *ApiTransactorSession) SendCash(to common.Address, amount *big.Int, _orgMsg string, _avaxAdd string, sendToContract bool) (*types.Transaction, error) {
	return _Api.Contract.SendCash(&_Api.TransactOpts, to, amount, _orgMsg, _avaxAdd, sendToContract)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiSession) Receive() (*types.Transaction, error) {
	return _Api.Contract.Receive(&_Api.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiTransactorSession) Receive() (*types.Transaction, error) {
	return _Api.Contract.Receive(&_Api.TransactOpts)
}
